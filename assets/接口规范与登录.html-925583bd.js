const e=JSON.parse('{"key":"v-f30423fc","path":"/zh/posts/%E5%85%B6%E4%BB%96/%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83%E4%B8%8E%E7%99%BB%E5%BD%95.html","title":"接口规范与业务分层","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-01-04T00:00:00.000Z","category":["其他"],"tag":["接口"],"sidebar":"heading","description":"接口规范与业务分层 1.接口规范 2.业务分层 登录鉴权 1. Cookie&amp;Session 「HTTP 无状态」我们知道，HTTP 是无状态的。也就是说，HTTP 请求方和响应方间无法维护状态，都是一次性的，它不知道前后的请求都发生了什么。但有的场景下，我们需要维护状态。最典型的，一个用户登陆微博，发布、关注、评论，都应是在登录后的用户状态下的。「标记」那解决办法是什么呢？","head":[["meta",{"property":"og:url","content":"https://github.com/Vstarlight/zh/posts/%E5%85%B6%E4%BB%96/%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83%E4%B8%8E%E7%99%BB%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"VGer"}],["meta",{"property":"og:title","content":"接口规范与业务分层"}],["meta",{"property":"og:description","content":"接口规范与业务分层 1.接口规范 2.业务分层 登录鉴权 1. Cookie&amp;Session 「HTTP 无状态」我们知道，HTTP 是无状态的。也就是说，HTTP 请求方和响应方间无法维护状态，都是一次性的，它不知道前后的请求都发生了什么。但有的场景下，我们需要维护状态。最典型的，一个用户登陆微博，发布、关注、评论，都应是在登录后的用户状态下的。「标记」那解决办法是什么呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/Vstarlight/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"接口规范与业务分层"}],["meta",{"property":"article:tag","content":"接口"}],["meta",{"property":"article:published_time","content":"2022-01-04T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口规范与业务分层\\",\\"image\\":[\\"https://github.com/Vstarlight/\\"],\\"datePublished\\":\\"2022-01-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.接口规范","slug":"_1-接口规范","link":"#_1-接口规范","children":[]},{"level":2,"title":"2.业务分层","slug":"_2-业务分层","link":"#_2-业务分层","children":[]},{"level":2,"title":"1. Cookie&Session","slug":"_1-cookie-session","link":"#_1-cookie-session","children":[]},{"level":2,"title":"2. JSON Web Token (JWT)","slug":"_2-json-web-token-jwt","link":"#_2-json-web-token-jwt","children":[{"level":3,"title":"（1）介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"（2）实现","slug":"_2-实现","link":"#_2-实现","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.04,"words":1212},"filePathRelative":"zh/posts/其他/接口规范与登录.md","localizedDate":"2022年1月4日","excerpt":"<h1> 接口规范与业务分层</h1>\\n<h2> 1.接口规范</h2>\\n<p>\\n</p>\\n<h2> 2.业务分层</h2>\\n<figure><figcaption></figcaption></figure>\\n<h1> 登录鉴权</h1>\\n<h2> 1. Cookie&amp;Session</h2>\\n<p>「HTTP 无状态」<strong>我们知道，HTTP 是无状态的。也就是说，HTTP 请求方和响应方间无法维护状态，都是一次性的，它不知道前后的请求都发生了什么。但有的场景下，我们需要维护状态。最典型的，一个用户登陆微博，发布、关注、评论，都应是在登录后的用户状态下的。</strong>「标记」那解决办法是什么呢？</p>","autoDesc":true}');export{e as data};
